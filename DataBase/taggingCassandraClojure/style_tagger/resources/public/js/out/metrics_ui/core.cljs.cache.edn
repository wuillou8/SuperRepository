;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name metrics-ui.core, :imports {History goog.History}, :requires {reagent reagent.core, ajax.core ajax.core, secretary secretary.core, reagent.session reagent.session, session reagent.session, EventType goog.history.EventType, reagent.core reagent.core, goog.history.EventType goog.history.EventType, History goog.History, events goog.events, secretary.core secretary.core, goog.events goog.events}, :uses {PUT ajax.core, POST ajax.core, atom reagent.core, GET ajax.core}, :defs {home-page {:protocol-inline nil, :meta {:file "/Users/jairwuiloud/Desktop/WORK/GITAccounts/ThinkTopic/cn-metrics/style_tagger/src/cljs/style_tagger/core.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([]))}, :name metrics-ui.core/home-page, :variadic false, :file "src/cljs/style_tagger/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, event-page {:protocol-inline nil, :meta {:file "/Users/jairwuiloud/Desktop/WORK/GITAccounts/ThinkTopic/cn-metrics/style_tagger/src/cljs/style_tagger/core.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([]))}, :name metrics-ui.core/event-page, :variadic false, :file "src/cljs/style_tagger/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, about-page {:protocol-inline nil, :meta {:file "/Users/jairwuiloud/Desktop/WORK/GITAccounts/ThinkTopic/cn-metrics/style_tagger/src/cljs/style_tagger/core.cljs", :line 22, :column 7, :end-line 22, :end-column 17, :arglists (quote ([]))}, :name metrics-ui.core/about-page, :variadic false, :file "src/cljs/style_tagger/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-page {:protocol-inline nil, :meta {:file "/Users/jairwuiloud/Desktop/WORK/GITAccounts/ThinkTopic/cn-metrics/style_tagger/src/cljs/style_tagger/core.cljs", :line 26, :column 7, :end-line 26, :end-column 19, :arglists (quote ([]))}, :name metrics-ui.core/current-page, :variadic false, :file "src/cljs/style_tagger/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hook-browser-navigation! {:protocol-inline nil, :meta {:file "/Users/jairwuiloud/Desktop/WORK/GITAccounts/ThinkTopic/cn-metrics/style_tagger/src/cljs/style_tagger/core.cljs", :line 45, :column 7, :end-line 45, :end-column 31, :arglists (quote ([]))}, :name metrics-ui.core/hook-browser-navigation!, :variadic false, :file "src/cljs/style_tagger/core.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/jairwuiloud/Desktop/WORK/GITAccounts/ThinkTopic/cn-metrics/style_tagger/src/cljs/style_tagger/core.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([]))}, :name metrics-ui.core/mount-root, :variadic false, :file "src/cljs/style_tagger/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/Users/jairwuiloud/Desktop/WORK/GITAccounts/ThinkTopic/cn-metrics/style_tagger/src/cljs/style_tagger/core.cljs", :line 58, :column 7, :end-line 58, :end-column 12, :arglists (quote ([]))}, :name metrics-ui.core/init!, :variadic false, :file "src/cljs/style_tagger/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {secretary secretary.core, secretary.core secretary.core}, :cljs.analyzer/constants {:seen #{:ns :name :file :end-column :prefix :column :div :line :end-line :h2 :arglists :doc :current-page :test :href :a}, :order [:div :h2 :a :href :current-page :prefix :ns :name :file :end-column :column :line :end-line :arglists :doc :test]}, :doc nil}